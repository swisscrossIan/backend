const express = require('express');
const { Pool } = require('pg');
const cors = require('cors');

const app = express();
app.use(cors({ origin: 'http://34.130.92.139' })); // Replace with your actual frontend IP if needed;

// Set up PostgreSQL connection
const pool = new Pool({
    user: 'bridges-admin',
    host: 'localhost', // or your server's IP
    database: 'bridges-postgres',
    password: 'shamed-DISKS-simulate',
    port: 5432,
});

// Define route to fetch active resources
app.get('/api/active_resources', async (req, res) => {
    try {
        const result = await pool.query('SELECT * FROM active_resources');
        res.json(result.rows);
    } catch (error) {
        console.error('Error fetching active resources:', error);
        res.status(500).json({ error: 'Internal server error' });
    }
});

const PORT = process.env.PORT || 5000;
app.listen(PORT, () => {
    console.log(`Server is running on port ${PORT}`);
});const express = require('express');
const { Pool } = require('pg');
const cors = require('cors');

const app = express();
app.use(cors({ origin: 'http://34.130.92.139' })); // Replace with your actual frontend IP if needed;

// Set up PostgreSQL connection
const pool = new Pool({
    user: 'bridges-admin',
    host: 'localhost', // or your server's IP
    database: 'bridges-postgres',
    password: 'shamed-DISKS-simulate',
    port: 5432,
});

// Define route to fetch active resources
app.get('/api/active_resources', async (req, res) => {
    try {
        const result = await pool.query('SELECT * FROM active_resources');
        res.json(result.rows);
    } catch (error) {
        console.error('Error fetching active resources:', error);
        res.status(500).json({ error: 'Internal server error' });
    }
});

const PORT = process.env.PORT || 5000;
app.listen(PORT, () => {
    console.log(`Server is running on port ${PORT}`);
});
